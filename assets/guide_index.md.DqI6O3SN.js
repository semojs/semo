import{_ as o,v as e}from"./chunks/framework.CxMbDBNk.js";import"./chunks/theme.D1tVMxqi.js";const p=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),a={name:"guide/index.md"},i=e.createStaticVNode('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p>Semo 是一个命令行开发框架，基于优秀的 <code>yargs</code> 包做的封装和扩展，Semo 要解决的不是如何解析命令行选项和参数，如何定义命令和触发命令这样的问题，而是对如何在业务中落地做了规范和约定，使得公司内部众多的Node 微服务项目可以有一致的命令行架构，并且在此基础上提供了各种扩展特性。</p><h2 id="原则" tabindex="-1">原则 <a class="header-anchor" href="#原则" aria-label="Permalink to &quot;原则&quot;">​</a></h2><ul><li><strong>一致性</strong>: 不管Node项目使用何种框架，或者如何抽象分层，都可以使用本框架来实现统一风格的命令行脚本。</li><li><strong>可扩展性</strong>: 插件可以扩展，命令可以覆写，配置可以覆盖，使用钩子机制，可以与内置或第三方插件定义的钩子交互。</li><li><strong>高效</strong>: 上手简单，开发效率高，风格一致，维护效率高，使用频繁，工作效率高。</li></ul><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li>核心概念少但是强大，包括插件，命令，脚本，配置，钩子等。</li><li>插件，命令，配置，都可以按照约定的方式进行扩展或者覆盖。</li><li>提供了一个可扩展的 REPL 环境，并且支持 <code>await</code>。</li><li>可以为其他插件定义的命令添加子命令。</li><li>提供了一个简单的代码生成的机制，基本的插件，命令，脚本样板代码可以自动生成，支持扩展。</li><li>支持 <code>npm</code> 组织包名格式的插件。</li></ul><h2 id="名字的由来" tabindex="-1">名字的由来 <a class="header-anchor" href="#名字的由来" aria-label="Permalink to &quot;名字的由来&quot;">​</a></h2><p>众所周知，起名字很难，Semo是我基于心目中火种的概念，在各个语言里翻出来的，是世界语里种子的含义，寓意起点和希望。</p><h2 id="一些约定" tabindex="-1">一些约定 <a class="header-anchor" href="#一些约定" aria-label="Permalink to &quot;一些约定&quot;">​</a></h2><ul><li>所有的示例代码都是基于 <code>Typescript</code> 的，<code>Semo</code> 核心也是基于 <code>Typescript</code> 编写的，但是 <code>Semo</code> 是支持纯 <code>js</code> 编写的项目的，具体方法在配置管理小节有说明。</li><li>文档中默认环境已经全局安装了 <code>semo</code> 和 <code>yarn</code>，就不在具体的章节中提示了。</li><li>本项目的开发环境是 <code>Mac</code>，运行环境除了本机就是线上的容器环境，在 <code>Windows</code> 上没有测试过，有可能有兼容性问题。</li></ul>',10),t=[i];function d(l,r,c,n,s,h){return e.openBlock(),e.createElementBlock("div",null,t)}const _=o(a,[["render",d]]);export{p as __pageData,_ as default};
