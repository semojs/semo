(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{305:function(s,t,a){"use strict";a.r(t);var e=a(14),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"常见问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[s._v("#")]),s._v(" 常见问题")]),s._v(" "),t("h2",{attrs:{id:"semo-怎么这么慢-怎么优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#semo-怎么这么慢-怎么优化"}},[s._v("#")]),s._v(" "),t("code",[s._v("Semo")]),s._v(" 怎么这么慢，怎么优化？")]),s._v(" "),t("p",[s._v("相对于一些逻辑比较简单纯粹的脚本，Semo 考虑了很多灵活性的设置，包括但不限于插件的多层扫描，配置的覆盖规则，钩子机制等等，其中影响最大的是插件扫描的 IO负担，目前经过一些优化（引入内部缓存）已经有一些效果，后面如果把插件扫描结果彻底持久化，是可以进一步提升性能的，但是是双刃剑，还需要考虑更新机制，后面会持续优化。")]),s._v(" "),t("p",[s._v("另外，到目前为止，都在探索 "),t("code",[s._v("Semo")]),s._v(" 在业务开发中的各种可能性，暂时性能问题影响并没有那么大，所以更倾向于投入在探索和兼容各种可能性上。")]),s._v(" "),t("p",[s._v("通过缩小插件扫描范围可以进一步提速：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("semo status --disable-global-plugin --disable-home-plugin\n")])])]),t("p",[s._v("如果不想每次都输入，可以放到 "),t("code",[s._v(".semorc.yml")]),s._v(" 文件当中：")]),s._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("--disable-global-plugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("--disable-home-plugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n")])])]),t("p",[s._v("或")]),s._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("disableGlobalPlugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("disableHomePlugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n")])])]),t("h2",{attrs:{id:"semo-可以直接运行-typescript-命令么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#semo-可以直接运行-typescript-命令么"}},[s._v("#")]),s._v(" "),t("code",[s._v("Semo")]),s._v(" 可以直接运行 "),t("code",[s._v("Typescript")]),s._v(" 命令么？")]),s._v(" "),t("p",[s._v("简单来说，不可以，如果可以的话，岂不是就成 "),t("code",[s._v("Deno")]),s._v(" 啦，但是，在特殊的条件下是可以的，以下是步骤：")]),s._v(" "),t("p",[t("strong",[s._v("1、项目中应该有 "),t("code",[s._v("typescript")]),s._v(" 和 "),t("code",[s._v("ts-node")]),s._v(" 两个包")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("yarn add typescript ts-node -D\n")])])]),t("p",[t("strong",[s._v("2、初始化 tsconfig.json")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("npx tsc --init\n")])])]),t("p",[t("strong",[s._v("可以根据需要进行配置，这里最少要修改的配置如下:")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('"target": "es6",\n')])])]),t("p",[s._v("原因是，转换的代码里有 "),t("code",[s._v("async/await")])]),s._v(" "),t("p",[t("strong",[s._v("3、package.json 里配置一个 scripts 命令")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('"scripts": {\n    "semo": "node --require ts-node/register ./node_modules/@semo/cli/lib/bin.js",\n}\n')])])]),t("p",[t("strong",[s._v("4、修改 "),t("code",[s._v(".semorc.yml")])])]),s._v(" "),t("p",[s._v("添加对 typescript 的支持")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("typescript: true\n")])])]),t("p",[t("strong",[s._v("5、最后创建一个ts的命令行脚本吧")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("semo g command test\nyarn semo test\n")])])]),t("p",[s._v("最后，这种方式比较适合于定义本地命令，性能要比执行编译之后的代码要慢一些，但是开发体验较好，一般常用的方式还是让 Semo 去执行编译之后的命令。")])])}),[],!1,null,null,null);t.default=r.exports}}]);