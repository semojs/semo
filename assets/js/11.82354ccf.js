(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{365:function(v,_,t){"use strict";t.r(_);var e=t(42),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[v._v("#")]),v._v(" 介绍")]),v._v(" "),t("p",[v._v("Semo 是一个命令行开发框架，基于优秀的 "),t("code",[v._v("yargs")]),v._v(" 包做的封装和扩展，Semo 要解决的不是如何解析命令行选项和参数，如何定义命令和触发命令这样的问题，而是对如何在业务中落地做了规范和约定，使得公司内部众多的Node 微服务项目可以有一致的命令行架构，并且在此基础上提供了各种扩展特性。")]),v._v(" "),t("h2",{attrs:{id:"原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原则"}},[v._v("#")]),v._v(" 原则")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("一致性")]),v._v(": 不管Node项目使用何种框架，或者如何抽象分层，都可以使用本框架来实现统一风格的命令行脚本。")]),v._v(" "),t("li",[t("strong",[v._v("可扩展性")]),v._v(": 插件可以扩展，命令可以覆写，配置可以覆盖，使用钩子机制，可以与内置或第三方插件定义的钩子交互。")]),v._v(" "),t("li",[t("strong",[v._v("高效")]),v._v(": 上手简单，开发效率高，风格一致，维护效率高，使用频繁，工作效率高。")])]),v._v(" "),t("h2",{attrs:{id:"特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[v._v("#")]),v._v(" 特性")]),v._v(" "),t("ul",[t("li",[v._v("核心概念少但是强大，包括插件，命令，脚本，配置，钩子等。")]),v._v(" "),t("li",[v._v("插件，命令，配置，都可以按照约定的方式进行扩展或者覆盖。")]),v._v(" "),t("li",[v._v("提供了一个可扩展的 REPL 环境，并且支持 "),t("code",[v._v("await")]),v._v("。")]),v._v(" "),t("li",[v._v("可以为其他插件定义的命令添加子命令。")]),v._v(" "),t("li",[v._v("提供了一个简单的代码生成的机制，基本的插件，命令，脚本样板代码可以自动生成，支持扩展。")]),v._v(" "),t("li",[v._v("支持 "),t("code",[v._v("npm")]),v._v(" 组织包名格式的插件。")])]),v._v(" "),t("h2",{attrs:{id:"名字的由来"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#名字的由来"}},[v._v("#")]),v._v(" 名字的由来")]),v._v(" "),t("p",[v._v("众所周知，起名字很难，Semo是我基于心目中火种的概念，在各个语言里翻出来的，是世界语里种子的含义，寓意起点和希望。")]),v._v(" "),t("h2",{attrs:{id:"一些约定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些约定"}},[v._v("#")]),v._v(" 一些约定")]),v._v(" "),t("ul",[t("li",[v._v("所有的示例代码都是基于 "),t("code",[v._v("Typescript")]),v._v(" 的，"),t("code",[v._v("Semo")]),v._v(" 核心也是基于 "),t("code",[v._v("Typescript")]),v._v(" 编写的，但是 "),t("code",[v._v("Semo")]),v._v(" 是支持纯 "),t("code",[v._v("js")]),v._v(" 编写的项目的，具体方法在配置管理小节有说明。")]),v._v(" "),t("li",[v._v("文档中默认环境已经全局安装了 "),t("code",[v._v("semo")]),v._v(" 和 "),t("code",[v._v("yarn")]),v._v("，就不在具体的章节中提示了。")]),v._v(" "),t("li",[v._v("本项目的开发环境是 "),t("code",[v._v("Mac")]),v._v("，运行环境除了本机就是线上的容器环境，在 "),t("code",[v._v("Windows")]),v._v(" 上没有测试过，有可能有兼容性问题。")])])])}),[],!1,null,null,null);_.default=a.exports}}]);