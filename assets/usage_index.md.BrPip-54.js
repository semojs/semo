import{_ as a,v as e}from"./chunks/framework.BckUIXX1.js";import"./chunks/theme.CINKKgSj.js";const p=JSON.parse('{"title":"概述","description":"","frontmatter":{},"headers":[],"relativePath":"usage/index.md","filePath":"usage/index.md"}'),i={name:"usage/index.md"};function d(l,o,t,c,r,n){return e.openBlock(),e.createElementBlock("div",null,o[0]||(o[0]=[e.createStaticVNode('<h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h1><p>由于 <code>Semo</code> 几乎不提供任何直接的好处，所以有必要详细介绍一下如果利用好 <code>Semo</code>，从设计的初衷来说。<code>Semo</code> 被设计用来提高企业级项目开发工作的效率，那么只要有什么地方可以通过代码解决的，都是 <code>Semo</code> 的用武之地。</p><h2 id="从项目阶段划分" tabindex="-1">从项目阶段划分 <a class="header-anchor" href="#从项目阶段划分" aria-label="Permalink to &quot;从项目阶段划分&quot;">​</a></h2><p>根据项目所处的阶段，<code>Semo</code> 可以在各个阶段发挥作用：</p><ul><li>立项阶段：可以快速初始化项目</li><li>开发阶段：通过快速访问核心方法，验证方法的输入输出，封装基础设施，减少重复造轮子的情况</li><li>维护阶段：项目进入维护阶段，需要写大量的管理命令或者运维脚本</li><li>线上排查问题：线上出了BUG，但是只有线上能够重现，通过 <code>REPL</code> 可以一步步接近真相</li><li>线上运维：利用实现写好的脚本和命令，轻松解决需求方提出的各种要求，提高跨部门间的信任</li></ul><h2 id="从形式上划分" tabindex="-1">从形式上划分 <a class="header-anchor" href="#从形式上划分" aria-label="Permalink to &quot;从形式上划分&quot;">​</a></h2><p><code>Semo</code> 充分考虑各种使用场景，不同的场景发挥的作用也不同：</p><ul><li>开发插件：不同的插件功能不同，但代码风格一致</li><li>项目整合：为项目提供命令行基础设施，如果配合其他插件，甚至整个项目都可以基于 <code>Semo</code> 构建</li><li>解决方案：为各种业务场景提供脚手架，沉淀最佳实践，提高新项目的启动速度</li><li>发行版：基于解决方案进一步整合而成，构建完整可用的产品，从而产生商业价值</li></ul><p>这里的划分方法不绝对，也没有哪个场景必须由 <code>Semo</code> 来解决，甚至，任何遇到的问题都有无数的解决方案，<code>Semo</code> 存在的目的是提供一致性，使得我们减少重复建设，提高沟通效率，沉淀最佳实践，不断夯实企业技术实力。</p>',9)]))}const _=a(i,[["render",d]]);export{p as __pageData,_ as default};
