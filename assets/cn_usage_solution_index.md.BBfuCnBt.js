import{_ as n,v as a}from"./chunks/framework.CAE459Ah.js";import"./chunks/theme.BJ09EcjL.js";const h=JSON.parse('{"title":"解决方案","description":"","frontmatter":{},"headers":[],"relativePath":"cn/usage/solution/index.md","filePath":"cn/usage/solution/index.md"}'),s={name:"cn/usage/solution/index.md"};function t(o,e,p,i,d,r){return a.openBlock(),a.createElementBlock("div",null,e[0]||(e[0]=[a.createStaticVNode(`<h1 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h1><p><code>Semo</code> 解决方案首先是针对某一个场景做的解决方案，其次才是用了一些 <code>Semo</code> 的能力，如果不使用 <code>Semo</code> 那么其仍然是解决方案，就跟 <code>Semo</code> 没有什么关系了。</p><h2 id="企业级解决方案" tabindex="-1">企业级解决方案 <a class="header-anchor" href="#企业级解决方案" aria-label="Permalink to &quot;企业级解决方案&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>- 前端项目脚手架</span></span>
<span class="line"><span>- 后端项目脚手架</span></span>
<span class="line"><span>- 后台项目脚手架</span></span>
<span class="line"><span>- 小程序开发脚手架</span></span>
<span class="line"><span>...</span></span></code></pre></div><p>如果再加上不同类型的业务，比如电商类，财务类等等，是可以组合成很多变种的，同一种类型也可以有不同的解决方案，所以最终我们在企业内部是形成适合自己的技术积累，从而使得在企业发展过程中，获得规范化和技术沉淀。这种脚手架项目是为了提高企业内部的项目的一致性和开发效率，不见得需要开源以及满足其他公司的使用场景，但是在企业内部，通过脚手架可以减少重复建设，提高项目的一致性，后之后的开发和维护节省成本。</p><h2 id="开源的解决方案" tabindex="-1">开源的解决方案 <a class="header-anchor" href="#开源的解决方案" aria-label="Permalink to &quot;开源的解决方案&quot;">​</a></h2><p>虽然，上面说解决方案在不同的企业各有不同，但是也是可以有开源的解决方案的，比如 <a href="https://scaffold.ant.design/" target="_blank" rel="noreferrer">antd 的脚手架市场</a>，目前还没有基于 <code>Semo</code> 的开源脚手架，希望以后会有。</p><p>通常我们认为一个解决方案如果能够开源会获得更好的质量，包括安全性，扩展性和功能等。</p>`,8)]))}const u=n(s,[["render",t]]);export{h as __pageData,u as default};
